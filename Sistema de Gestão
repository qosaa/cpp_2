#include <iostream>
using namespace std;

struct Produto {
    int id;
    char status;
    string nome;
    int quantidade;
    float preco;
};

// Função para adicionar um novo produto
void adicionarProduto(Produto produtos[], int& quantidadeAtual) {
    if (quantidadeAtual < 100) {
        //define o id automaticamente
        produtos[quantidadeAtual].id = quantidadeAtual + 1;

        cout << "Produto " << produtos[quantidadeAtual].id << ":" << endl;

        cout << "Qual é o nome do produto: ";
        cin.ignore(); // Limpar o buffer do `cin` para evitar problemas com getline
        getline(cin, produtos[quantidadeAtual].nome);

        cout << "Qual é a quantidade do produto: ";
        cin >> produtos[quantidadeAtual].quantidade;

        cout << "Qual é o preço do produto: ";
        cin >> produtos[quantidadeAtual].preco;

        produtos[quantidadeAtual].status = 'A'; // Define como ativo

        // Abrir o ficheiro para adicionar o produto
        ofstream ficheiro("produtos.txt", ios::app);
        if (ficheiro.is_open()) {
            ficheiro << produtos[quantidadeAtual].id << ","
                     << produtos[quantidadeAtual].nome << ","
                     << produtos[quantidadeAtual].quantidade << ","
                     << produtos[quantidadeAtual].preco << ","
                     << produtos[quantidadeAtual].status << endl;
            ficheiro.close();
            cout << "produto adicionado e gravado no ficheiro" << endl;
        } else {
            cout << "nao da para abrir o ficheiro" << endl;
        }

        quantidadeAtual++;
        cout << "..............................." << endl;
    } else {
        cout << "Limite de produtos atingido." << endl;
    }
}

// Função para exibir todos os produtos
void exibirProdutos(const Produto produtos[], int quantidadeAtual) {
    ifstream ficheiro("produtos.txt");
    string linha;

    if (!ficheiro.is_open()) {
        cout << "nao da para abrir o ficheiro" << endl;
        return;
    }

    cout << "produtos adicionados: " << endl;
    cout << "-------------------------" << endl;

    while (getline(ficheiro, linha)) {
        string id, nome, quantidade, preco;
        char status;

        //extraindo os campos
        stringstream ss(linha);
        getline(ss, id, ',');
        getline(ss, nome, ',');
        getline(ss, quantidade, ',');
        getline(ss, preco, ',');
        ss >> status; // Para o status ser tratado como `char`

        //mostra os ativos
        if (status == 'A') {
            cout << "ID: " << id << endl;
            cout << "Nome: " << nome << endl;
            cout << "Quantidade: " << quantidade << endl;
            cout << "Preço: " << preco << endl;
            cout << "-------------------------" << endl;
        }
    }

    ficheiro.close();
}

// Função para calcular o valor total do stock
float calcularvalortotal(const Produto produtos[], int quantidadeAtual) {
    float total = 0;
    for (int i = 0; i < quantidadeAtual; i++) {
        total += produtos[i].preco * produtos[i].quantidade;
    }
    return total;
}

int main() {
    Produto produtos[100]; 
    int quantidadeAtual = 0;
    int menu;

    do {
        //mostra o menu
        cout << "1. Adicionar produto" << endl;
        cout << "2. Exibir produtos" << endl;
        cout << "3. Calcular valor total do stock" << endl;
        cout << "0. Sair" << endl;
        cout << "Opção: ";
        cin >> menu;

        switch(menu) {
            case 1:
                cout << "Selecionou: Adicionar produto" << endl;
                adicionarProduto(produtos, quantidadeAtual); 
                break;

            case 2:
                cout << "Selecionou: Exibir produtos" << endl;
                exibirProdutos(produtos, quantidadeAtual);
                break;

            case 3:
                cout << "Selecionou: Calcular valor total do stock" << endl;
                cout << "Valor total do stock: " << calcularvalortotal(produtos, quantidadeAtual) << endl;
                break;

            case 0:
                cout << "Selecionou: Sair" << endl;
                break;

            default:
                cout << "Opção inválida." << endl;
        }

    } while(menu != 0);

    return 0;
}
